name: CI

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-versions.outputs.versions }}
    steps:
      - name: Compute which versions to build
        id: set-versions
        run: echo ::set-output name=versions::$(curl https://casinit.herokuapp.com/actuator/supportedVersions|jq '[.[]|select(.type=="cas")|select(.version|endswith("SNAPSHOT")|not)|[.version,.bootVersion]|join("/")]' -c)

      - name: Dump results
        env:
          VARS: ${{ toJson(steps.set-versions.outputs) }}
        run: echo -e "$VARS\n"

  build:
    needs: prep
    runs-on: ubuntu-latest

    strategy:
      matrix:
        jdk: ["11"]

        # TODO: Generate CAS & boot versions from this
        # curl https://casinit.herokuapp.com/actuator/supportedVersions | jq
        cas-boot-version: ${{ fromJson(needs.prep.outputs.versions) }}

        # NOTE: Always put "core," at the front of the deps list.
        cas-deps: ["core,ldap,jsonsvc"]

    steps:
      - uses: actions/checkout@v2

      # TODO: Compute which is the latest from web service
      - name: Compute Docker tag
        id: vars
        env:
          CAS_DEPS: ${{ matrix.cas-deps }}
        run: |
          CAS_VER=$(echo ${{ matrix.cas-boot-version }}|cut -d / -f 1)
          BOOT_VER=$(echo ${{ matrix.cas-boot-version }}|cut -d / -f 2)
          TAG_DEPS=$(echo ${CAS_DEPS#core,}|tr , -)
          TAG_BASE=jdk${{ matrix.jdk }}-cas${CAS_VER}-${TAG_DEPS}
          TAG_HASH=$TAG_BASE-$SHA_SHORT
          SHA_SHORT=$(git rev-parse --short HEAD)
          REG=https://registry.hub.docker.com/v1/repositories/sigcorp/cas/tags
          echo "::set-output name=cas-version::$CAS_VER"
          echo "::set-output name=boot-version::$BOOT_VER"
          echo "::set-output name=tag-base::$TAG_BASE"
          echo "::set-output name=tag-hash::$TAG_HASH"
          echo "::set-output name=tag-pushed::$(curl $REG |jq '[.[]|select(.name=="${TAG_HASH}")]|length')"

      - name: Dump vars
        env:
          VARS: ${{ toJson(steps.vars.outputs) }}
        run: echo -e "$VARS\n"

      # TODO: Now that we have the tag we're building, check the registry before continuing.

      - name: Setup Java JDK
        uses: actions/setup-java@v2.5.0
        with:
          java-version: ${{ matrix.jdk }}
          java-package: jdk
          distribution: temurin
          architecture: x64

      - name: Download overlay
        env:
          URL: https://casinit.herokuapp.com/starter.tgz
          CAS: ${{ steps.vars.outputs.cas-version }}
          BOOT: ${{ steps.vars.outputs.boot-version }}
          DEPS: ${{ matrix.cas-deps }}
        run: curl $URL -d "dependencies=${DEPS}&casVersion=${CAS}&bootVersion=${BOOT}" | tar  -xzvf -

      - name: Add keystore to Dockerfile
        run: echo 'RUN keytool -genkeypair -keyalg RSA -dname "CN=localhost,O=SelfSigned,L=San Diego,ST=California,C=US" -validity 1825 -keysize 2048 -keystore /etc/cas/thekeystore -storepass changeit -keypass changeit' >>Dockerfile

      - name: Docker Hub Login
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: sigcorp/cas:${{ steps.vars.outputs.tag-base }}

      # # TODO: Replace 'ldap' with opt label
      # - name: Push to Docker Hub
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       sigcorp/cas:${{ steps.vars.outputs.tag }}
      #       sigcorp/cas:${{ steps.vars.outputs.tag }}-${{ steps.shortSha.outputs.sha_short }}
      #       sigcorp/cas:${{ steps.vars.outputs.tag }}-${{ github.run_number }}
      #       sigcorp/cas:latest-ldap
